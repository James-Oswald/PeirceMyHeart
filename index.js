(()=>{"use strict";const e=document.getElementById("showRect"),t=document.getElementById("mode"),n=document.getElementById("ellipses"),o=n.getContext("2d");if(null===o)throw Error("2d rendering context not supported");const l=o,i=n.getBoundingClientRect().x,d=n.getBoundingClientRect().y;let s;function c(e){var t,n;s={x:e.clientX-i,y:e.clientY-d},null===(t=document.getElementById("ellipses"))||void 0===t||t.addEventListener("mousemove",u),null===(n=document.getElementById("ellipses"))||void 0===n||n.addEventListener("mouseup",r)}function u(o){l.clearRect(0,0,n.width,n.height);const c={x:o.clientX-i,y:o.clientY-d};!function(n,o){const i={x:(o.x-n.x)/2+n.x,y:(o.y-n.y)/2+n.y},d=n.x-o.x,s=n.y-o.y,c=Math.abs(d),u=Math.abs(s);let r,m;if("circumscribed"===t.value){const e=Math.floor(function(e,t){const n=e.x-t.x,o=e.y-t.y;return Math.sqrt(n*n+o*o)}(i,o));r=Math.floor(e*(u/c)),m=Math.floor(e*(c/u))}else m=c/2,r=u/2;e.checked&&(l.beginPath(),l.rect(n.x,n.y,-d,-s),l.stroke()),l.beginPath(),l.ellipse(i.x,i.y,r,m,Math.PI/2,0,2*Math.PI),l.stroke()}(s,c)}function r(){var e;null===(e=document.getElementById("ellipses"))||void 0===e||e.removeEventListener("mousemove",u)}window.ellipseMode=function(){var e;null===(e=document.getElementById("ellipses"))||void 0===e||e.addEventListener("mousedown",c)}})();