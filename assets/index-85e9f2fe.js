(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const c of s)if(c.type==="childList")for(const l of c.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function e(s){const c={};return s.integrity&&(c.integrity=s.integrity),s.referrerPolicy&&(c.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?c.credentials="include":s.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function i(s){if(s.ep)return;s.ep=!0;const c=e(s);fetch(s.href,c)}})();class a{constructor(t,e){this.x=t??0,this.y=e??0}toString(){return"X: "+this.x+", Y: "+this.y}}class d{constructor(t,e,i){this.startVertex=t??new a,this.width=e??0,this.height=i??0}toString(){return`A rectangle with
Top Left Vertex at: `+this.startVertex.toString+`, 
Width of: `+this.width+`, 
Height of: `+this.height}getCorners(){const t=[this.startVertex];return t.push(new a(this.startVertex.x+this.width,this.startVertex.y)),t.push(new a(this.startVertex.x+this.width,this.startVertex.y+this.height)),t.push(new a(this.startVertex.x,this.startVertex.y+this.height)),t}containsPoint(t){const e=this.getCorners();return e[0].x<=t.x&&e[1].x>=t.x&&e[1].y<=t.y&&e[2].y>=t.y}overlaps(t){if(t instanceof d){const e=this.getCorners(),i=t.getCorners();for(let s=0;s<4;s++)if(this.containsPoint(i[s])||t.containsPoint(e[s]))return!0;return!1}else{const e=t.boundingBox;return this.overlaps(e)}}containsShape(t){if(t instanceof d){const e=t.getCorners();return this.containsPoint(e[0])&&this.containsPoint(e[2])}else{const e=t.boundingBox;return this.containsShape(e)}}}class p{constructor(t,e,i){this.rect=i??new d,this.identifier=t,this.origin=e}toString(){return"An atom representing the proposition: "+this.identifier+` and 
Boundary box of: 
`+this.rect.toString}containsPoint(t){return this.rect.containsPoint(t)}containsNode(t){return t instanceof p?this.rect.containsShape(t.rect):this.rect.containsShape(t.ellipse)}}class b{constructor(t,e,i){this.center=t??new a,this.radiusX=e??0,this.radiusY=i??0;const s=new a(this.center.x-this.radiusX,this.center.y-this.radiusY);this.boundingBox=new d(s,this.radiusX*2,this.radiusY*2)}toString(){return`An ellipse with
Center at: `+this.center.toString+`, 
Horizontal Radius of: `+this.radiusX+`, 
Vertical Radius of: `+this.radiusY}containsPoint(t){return this.boundingBox.containsPoint(t)}overlaps(t){return this.boundingBox.overlaps(t)}containsShape(t){return this.boundingBox.containsShape(t)}}class u{constructor(t,e){this.ellipse=t??new b,this.children=e??[]}toString(){let t;return this.ellipse===null?t="Sheet of Assertion of the AEG Tree":t=`A cut node with boundary box of 
`+this.ellipse.toString(),this.children.length>0&&(t+=`, 
With nested nodes: `+this.children.toString()),t}containsPoint(t){return this.ellipse===null?!0:this.ellipse.containsPoint(t)}containsNode(t){return this.ellipse===null?!0:t instanceof p?this.ellipse.containsShape(t.rect):this.ellipse.containsShape(t.ellipse)}verifyCut(){let t=!0;for(let e=0;e<this.children.length;e++){if(!t)return!1;this.ellipse===null&&this.children[e]instanceof u&&(t=this.children[e].verifyCut()),t=this.containsNode(this.children[e]),t&&this.children[e]instanceof u&&(t=this.children[e].verifyCut())}return t}canInsert(t,e){return!0}insert(t,e){this.children.push(t)}remove(t){if(this.containsPoint(t)){let e=!0;for(let i=0;i<this.children.length;i++)if(this.children[i].containsPoint(t))return e=!1,this.children[i]instanceof u?this.children[i].remove(t):(this.children=this.children.splice(i,1),!0);if(e)return!0}return!1}}class I{constructor(t){this.sheet=t??new u,this.sheet.ellipse=null}verifyAEG(){return this.sheet.verifyCut()}canInsertAEG(t,e){return this.sheet.canInsert(t,e)}insertAEG(t,e){this.canInsertAEG(t,e)&&this.sheet.insert(t,e)}remove(t){this.sheet.remove(t)}}const X=document.getElementById("showRect"),Y=document.getElementById("mode"),r=document.getElementById("canvas");r.width=window.innerWidth;r.height=window.innerHeight;const S=r.getContext("2d");if(S===null)throw Error("2d rendering context not supported");const o=S,g=r.getBoundingClientRect().x,v=r.getBoundingClientRect().y;let h,w;o.font="35pt arial";let E=!1,P=!1;const f=new I;let m;window.atomMode=T;window.ellipseMode=O;function G(n,t){const e=n.x-t.x,i=n.y-t.y;return Math.sqrt(e*e+i*i)}function R(n,t){const e={x:(t.x-n.x)/2+n.x,y:(t.y-n.y)/2+n.y},i=n.x-t.x,s=n.y-t.y,c=Math.abs(i),l=Math.abs(s);let x,y;if(Y.value==="circumscribed"){const M=Math.floor(G(e,t));x=Math.floor(M*(l/c)),y=Math.floor(M*(c/l))}else y=c/2,x=l/2;X.checked&&(o.beginPath(),o.rect(n.x,n.y,-i,-s),o.stroke()),o.beginPath(),o.ellipse(e.x,e.y,x,y,Math.PI/2,0,2*Math.PI),m=new b(e,x,y),o.stroke()}function O(){E=!0,r.addEventListener("mousedown",V),P&&(r.removeEventListener("mousedown",B),P=!1)}function T(){P=!0,r.addEventListener("mousedown",B),E&&(r.removeEventListener("mousedown",V),E=!1)}function V(n){h={x:n.clientX-g,y:n.clientY-v},r.addEventListener("mousemove",L),r.addEventListener("mouseup",()=>{r.removeEventListener("mousemove",L);const t=new u(m);f.canInsertAEG(t,m.center)&&f.insertAEG(t,m.center)})}function L(n){o.clearRect(0,0,r.width,r.height);const t={x:n.clientX-g,y:n.clientY-v};A(f.sheet),R(h,t)}function B(n){h={x:n.clientX-g,y:n.clientY-v},document.addEventListener("keypress",k)}function k(n){w=n.key,o.fillText(w,h.x,h.y),o.stroke,r.addEventListener("mousemove",C),r.addEventListener("mousedown",()=>{r.removeEventListener("mousemove",C);const t=new p(w,h);f.insertAEG(t,h)})}function C(n){o.clearRect(0,0,r.width,r.height),A(f.sheet);const t={x:n.clientX-g,y:n.clientY-v};o.fillText(w,t.x,t.y),o.stroke()}function A(n){for(let t=0;n.children.length>t;t++)n.children[t]instanceof p?H(n.children[t]):A(n.children[t]);n.ellipse instanceof b&&(o.beginPath(),o.ellipse(n.ellipse.center.x,n.ellipse.center.y,n.ellipse.radiusX,n.ellipse.radiusY,Math.PI/2,0,2*Math.PI),o.stroke())}function H(n){o.fillText(n.identifier,n.origin.x,n.origin.y),o.stroke()}
