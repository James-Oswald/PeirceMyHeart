(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();class f{constructor(e,t,n){this.rect=n,this.identifier=e,this.origin=t}containsPoint(e){return this.rect.containsPoint(e)}containsNode(e){return e instanceof f?this.rect.containsShape(e.rect):this.rect.containsShape(e.ellipse)}toString(){return"An atom representing the proposition: "+this.identifier+" and Boundary box of: "+this.rect.toString()}}class l{constructor(e,t){this.x=e??0,this.y=t??0}set(e,t){this.x=e,this.y=t}toString(){return"X: "+this.x+", Y: "+this.y}}class g{constructor(e,t,n){this.startVertex=e,this.width=t,this.height=n}getCorners(){const e=[this.startVertex];return e.push(new l(this.startVertex.x+this.width,this.startVertex.y)),e.push(new l(this.startVertex.x+this.width,this.startVertex.y+this.height)),e.push(new l(this.startVertex.x,this.startVertex.y+this.height)),e}containsPoint(e){const t=this.getCorners();return t[0].x<=e.x&&t[1].x>=e.x&&t[1].y<=e.y&&t[2].y>=e.y}overlaps(e){if(e instanceof g){const t=this.getCorners(),n=e.getCorners();for(let i=0;i<4;i++)if(this.containsPoint(n[i])||e.containsPoint(t[i]))return!0;return!1}else{for(let t=0;t<4;t++)if(e.containsPoint(this.getCorners()[t]))return!0;return!1}}containsShape(e){if(e instanceof g){const t=e.getCorners();return this.containsPoint(t[0])&&this.containsPoint(t[2])}else{for(let t=0;t<4;t++)if(!this.containsPoint(e.getWidestCoordinates()[t]))return!1;return!0}}toString(){return`A rectangle with
Top Left Vertex at: `+this.startVertex.toString()+", Width: "+this.width+", Height: "+this.height}}class E{constructor(e,t,n){this.center=e??new l,this.radiusX=t??0,this.radiusY=n??0;const i=new l(this.center.x-this.radiusX,this.center.y-this.radiusY);this.boundingBox=new g(i,this.radiusX*2,this.radiusY*2)}toString(){return"An ellipse with Center at: "+this.center.toString()+`, 
Horizontal Radius of: `+this.radiusX+`, 
Vertical Radius of: `+this.radiusY+`, 
Bounding box: `+this.boundingBox.toString()}containsPoint(e){return Math.round(Math.pow(e.x-this.center.x,2)/Math.pow(this.radiusX,2)+Math.pow(e.y-this.center.y,2)/Math.pow(this.radiusY,2))<=1}overlaps(e){if(e instanceof g){for(let t=0;t<4;t++)if(this.containsPoint(e.getCorners()[t]))return!0;return!1}else return this.boundingBox.overlaps(e.boundingBox)?(console.log("ellipse boxes overlap"),!0):!1}containsShape(e){if(e instanceof g){for(let t=0;t<4;t++)if(!this.containsPoint(e.getCorners()[t]))return!1;return!0}else if(e instanceof E){const t=e.getWidestCoordinates();for(let n=0;n<4;n++)if(!this.containsPoint(t[n]))return!1;return!0}throw Error("Invalid Shape passed to containsShape, must be a Rectangle | Ellipse")}checkQuadrantOverlap(e){for(let t=0;t<4;t++)if(this.containsPoint(e.boundingBox.getCorners()[t])){const n=e.getQuadrantPoints(t);console.log("has corner "+t);for(let i=0;i<6;i++)if(this.containsPoint(n[i]))return console.log("Has overlap"),!0}return!1}getWidestCoordinates(){return[new l(this.center.x,this.center.y-this.radiusY),new l(this.center.x+this.radiusX,this.center.y),new l(this.center.x,this.center.y+this.radiusY),new l(this.center.x-this.radiusX,this.center.y)]}getQuadrantPoints(e){console.log("Getting points for: "+this+`
In quad: `+e);const t=[],n=this.radiusX;let i=1;e===0?(t[0]=this.getWidestCoordinates()[3],t[1]=this.getWidestCoordinates()[0]):e===1?(t[0]=this.getWidestCoordinates()[0],t[1]=this.getWidestCoordinates()[1]):e===2?(t[0]=this.getWidestCoordinates()[1],t[1]=this.getWidestCoordinates()[2],i=-1):e===3&&(t[0]=this.getWidestCoordinates()[2],t[1]=this.getWidestCoordinates()[3],i=-1);for(let r=2;r<6;r++){let h=t[0].x;i===1?h=h+(r-1)*(n/5):h=h-(r-1)*(n/5);const x=this.getCurvePoint(h,i);t[r]=new l(h,x)}return console.log(t),t}getCurvePoint(e,t){return t*this.radiusY*Math.sqrt(1-Math.pow((e-this.center.x)/this.radiusX,2))+this.center.y}}class d{constructor(e,t){this.ellipse=e??new E,this.children=t??[]}getCurrentCut(e){for(let t=0;t<this.children.length;t++){const n=this.children[t];if(n instanceof d&&this.children[t].containsNode(e))return console.log("current cut: "+this.children[t]),n.getCurrentCut(e)}return this}containsPoint(e){return this.ellipse===null?!0:this.ellipse.containsPoint(e)}containsNode(e){if(this.ellipse===null)return!0;if(e instanceof f)return this.ellipse.containsShape(e.rect);if(e instanceof d)return this.ellipse.containsShape(e.ellipse);throw Error("containsNode expected AtomNode or CutNode")}remove(e){if(this.containsPoint(e)){let t=!0;for(let n=0;n<this.children.length;n++)if(this.children[n].containsPoint(e))return t=!1,this.children[n]instanceof d?this.children[n].remove(e):(this.children=this.children.splice(n,1),!0);if(t)return!0}return!1}toString(){let e;return this.ellipse===null?e="Sheet of Assertion of the AEG Tree":e=`A cut node with boundary box of 
`+this.ellipse.toString(),this.children.length>0&&(e+=`, 
With nested nodes: `+this.children.toString()),e}toFormulaString(){let e="";for(const t of this.children)t instanceof f?e+=t.identifier:t instanceof d&&(e+=t.toFormulaString()),e+=" ";return e=e.slice(0,-1),this.ellipse===null?e="["+e+"]":e="("+e+")",e}}class H{constructor(e){this.sheet=e??new d,this.sheet.ellipse=null}verify(){return this.verifyAEG(this.sheet)}verifyAEG(e){for(let t=0;t<e.children.length;t++){if(!e.containsNode(e.children[t]))return!1;for(let n=t+1;n<e.children.length;n++)if(this.overlaps(e.children[t],e.children[n]))return!1}for(let t=0;t<e.children.length;t++)if(e.children[t]instanceof d&&!this.verifyAEG(e.children[t]))return!1;return!0}canInsert(e){console.log("checking can insert");const t=this.sheet.getCurrentCut(e);for(let n=0;n<t.children.length;n++)if(this.overlaps(e,t.children[n]))return!1;return!0}insert(e){if(!this.canInsert(e))throw new Error("Insertion failed. "+e+" had a collision.");const t=this.sheet.getCurrentCut(e),n=[...t.children];if(t.children.push(e),e instanceof d)for(let i=0;i<n.length;i++)e.containsNode(n[i])&&(e.children.push(n[i]),t.children=t.children.splice(i,1))}remove(e){this.sheet.remove(e)}overlaps(e,t){let n,i;return e instanceof f?t instanceof f?e.rect.overlaps(t.rect):(n=t.ellipse,e.rect.overlaps(n)):t instanceof f?(n=e.ellipse,n.overlaps(t.rect)):(n=e.ellipse,i=t.ellipse,n.overlaps(i))}toString(){return this.sheet.toFormulaString()}}const o=document.getElementById("canvas"),V=o.getContext("2d"),D=document.getElementById("showRect"),j=document.getElementById("mode");if(V===null)throw Error("2d rendering context not supported");const a=V;let k,O;function Q(s,e){const t=s.x-e.x,n=s.y-e.y;return Math.sqrt(t*t+n*n)}function z(s,e){const t=new l((e.x-s.x)/2+s.x,(e.y-s.y)/2+s.y),n=s.x-e.x,i=s.y-e.y,r=Math.abs(n),h=Math.abs(i);let x,C;if(j.value==="circumscribed"){const Y=Math.floor(Q(t,e));C=Math.floor(Y*(h/r)),x=Math.floor(Y*(r/h))}else x=r/2,C=h/2;D.checked&&(a.beginPath(),a.rect(s.x,s.y,-n,-i),a.stroke());const W=new E(t,x,C);return u.canInsert(new d(W))?a.strokeStyle="#00FF00":a.strokeStyle="#FF0000",a.beginPath(),a.ellipse(t.x,t.y,x,C,0,0,2*Math.PI),a.stroke(),W}function U(){o.addEventListener("mousedown",R)}function R(s){k=new l(s.clientX,s.clientY),o.addEventListener("mousemove",M),o.addEventListener("mouseup",S),o.addEventListener("mouseout",b)}function M(s){const e=new l(s.clientX,s.clientY);a.clearRect(0,0,o.width,o.height),w(u.sheet),O=z(k,e)}function S(){const s=new d(O);u.canInsert(s)&&u.insert(s),console.log(u.toString()),o.removeEventListener("mousemove",M),o.removeEventListener("mouseup",S),o.removeEventListener("mouseout",b),a.clearRect(0,0,o.width,o.height),w(u.sheet)}function b(){o.removeEventListener("mousemove",M),o.removeEventListener("mouseup",S),o.removeEventListener("mouseout",b),a.clearRect(0,0,o.width,o.height),w(u.sheet)}function q(){o.removeEventListener("mousedown",R)}const c=document.getElementById("canvas"),F=c.getContext("2d");if(F===null)throw Error("2d rendering context not supported");const m=F;let v,y;function K(){window.addEventListener("keypress",T)}function T(s){J(s.key)&&(c.addEventListener("mousedown",$),y=s.key)}function $(s){const e=new l(s.clientX,s.clientY);v=e,m.fillText(y,e.x,e.y),m.stroke(),c.addEventListener("mousemove",A),c.addEventListener("mouseup",B),c.addEventListener("mouseout",I)}function A(s){v=new l(s.clientX,s.clientY),m.clearRect(0,0,c.width,c.height),w(u.sheet),m.fillText(y,v.x,v.y),m.stroke()}function B(){const s=m.measureText(y),e=new g(new l(v.x,v.y+s.actualBoundingBoxAscent),s.width,s.fontBoundingBoxDescent+s.actualBoundingBoxAscent),t=new f(y,v,e);u.insert(t),console.log(u.toString()),c.removeEventListener("mousemove",A),c.removeEventListener("mouseup",B),c.removeEventListener("mouseOut",I)}function I(){c.removeEventListener("mousemove",A),c.removeEventListener("mouseup",B),c.removeEventListener("mouseOut",I),m.clearRect(0,0,c.width,c.height),w(u.sheet)}function Z(){c.removeEventListener("mousedown",$),window.removeEventListener("keydown",T)}function J(s){return!!new RegExp(/^[A-Za-z]$/).test(s)}const X=document.getElementById("canvas");X.width=window.innerWidth;X.height=window.innerHeight;const G=X.getContext("2d");if(G===null)throw Error("2d rendering context not supported");const p=G;p.font="35pt arial";const _=document.getElementById("graphString");let L=!1,P=!1;const u=new H;window.atomMode=ee;window.ellipseMode=N;function N(){L=!0,U(),P&&(Z(),P=!1)}function ee(){P=!0,K(),L&&(q(),L=!1)}function w(s){_.innerHTML=u.toString();for(let e=0;s.children.length>e;e++)s.children[e]instanceof f?te(s.children[e]):w(s.children[e]);s.ellipse instanceof E&&(p.strokeStyle="#000000",p.beginPath(),p.ellipse(s.ellipse.center.x,s.ellipse.center.y,s.ellipse.radiusX,s.ellipse.radiusY,0,0,2*Math.PI),p.stroke())}function te(s){p.fillText(s.identifier,s.origin.x,s.origin.y),p.stroke()}
